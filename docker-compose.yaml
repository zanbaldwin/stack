version: '3.8'

x-logging: &default-logging
    driver: 'json-file'
    options:
        max-size: '5m'
        max-file: '1'

services:

    server:
        image: 'zanbaldwin/stack/server/production'
        build:
            context: './'
            dockerfile: './build/docker/server/Dockerfile'
            target: 'production'
            args:
                NGINX_VERSION: '1.21.4'
                DOMAIN: '${DOMAIN:-localhost}'
        restart: 'unless-stopped'
        depends_on:
            - 'php'
        ports:
            -   target: 80
                published: '${WEB_PORT:-80}'
                protocol: 'tcp'
                mode: 'host'
            -   target: 443
                published: '${SSL_PORT:-443}'
                protocol: 'tcp'
                mode: 'host'
        volumes:
            -   type: 'bind'
                source: '/etc/letsencrypt'
                target: '/etc/letsencrypt'
                read_only: true
        logging: *default-logging
        read_only: true

    php:
        image: 'zanbaldwin/stack/php/production'
        build:
            context: './'
            dockerfile: './build/docker/php/Dockerfile'
            target: 'production'
            args:
                PHP_VERSION: '8.1'
                GOLANG_VERSION: '1.16.5'
                ROADRUNNER_VERSION: '2.3.0'
        restart: 'unless-stopped'
        depends_on:
            -   'database'
            -   'queue'
            -   'redis'
        environment:
            PASSWORD_SECRET_NAME: 'dbpass'
        secrets: ['dbpass']
        volumes:
            # Restore System Temporary Directory on Read-only Filesystem
            -   type: 'tmpfs'
                target: '/tmp'
        logging: *default-logging
        read_only: true

    database:
        image: 'zanbaldwin/stack/database/production'
        build:
            context: './build/docker/database'
            target: 'production'
            args:
                MYSQL_VERSION: '8.0.27'
        restart: 'unless-stopped'
        environment:
            MYSQL_ROOT_PASSWORD_FILE: '/run/secrets/dbpass'
            MYSQL_DATABASE: 'main'
        secrets: ['dbpass']
        volumes:
            -   type: 'bind'
                source: '/opt/mysql'
                target: '/var/lib/mysql'
                read_only: false
        logging: *default-logging

    migrate:
        image: 'zanbaldwin/stack/migrate/production'
        build:
            context: './'
            dockerfile: './build/docker/migrate/Dockerfile'
            target: 'production'
            args: {}
        depends_on:
            -   'database'
        environment:
            DATABASE_URL: '${DATABASE_URL:-mysql://root@database/main}'
            PASSWORD_SECRET_NAME: 'dbpass'
        secrets: [ 'dbpass' ]
        logging: *default-logging
        read_only: true

    queue:
        image: 'rabbitmq:3.9.11-alpine'
        restart: 'unless-stopped'
        environment: {}
        volumes:
            -   type: 'bind'
                source: '/opt/rabbitmq'
                target: '/var/lib/rabbitmq'
                read_only: false
        logging: *default-logging

    workers:
        image: 'zanbaldwin/stack/php/production'
        restart: 'unless-stopped'
        command:
            -   'php'
            -   'bin/console'
            -   'messenger:consume'
            -   '--env=prod'
            -   '--memory-limit=128M'
            -   '--time-limit=900'
            -   '--limit=128'
            -   '--failure-limit=16'
            -   'async'
        depends_on:
            -   'database'
            -   'queue'
            -   'redis'
        environment:
            PASSWORD_SECRET_NAME: 'dbpass'
        secrets: ['dbpass']
        volumes:
            # Restore System Temporary Directory on Read-only Filesystem
            -   type: 'tmpfs'
                target: '/tmp'
        logging: *default-logging
        read_only: true

    cron:
        image: 'zanbaldwin/stack/php/production'
        restart: 'unless-stopped'
        command: ['crond', '-f', '-c', '/etc/crontabs']
        environment:
            PASSWORD_SECRET_NAME: 'dbpass'
        secrets: ['dbpass']
        volumes:
            # Restore System Temporary Directory on Read-only Filesystem
            -   type: 'tmpfs'
                target: '/tmp'
        logging: *default-logging
        read_only: true

    redis:
        image: 'zanbaldwin/stack/redis/production'
        build:
            context: './build/docker/redis'
            target: 'production'
            args:
                REDIS_VERSION: '6.2.6'
        restart: 'unless-stopped'
        volumes:
            -   type: 'bind'
                source: '/opt/redis'
                target: '/data'
                read_only: false
        logging: *default-logging

secrets:
    dbpass:
        file: './build/.secrets/dbpass'
